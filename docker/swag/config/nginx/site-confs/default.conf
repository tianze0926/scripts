server {
    server_name auth.*;
    include /config/nginx/ssl.conf;
    set $upstream http://authelia:9091;
    location / {
        include /config/nginx/proxy.conf;
        proxy_pass $upstream;
    }
    location /api/verify {
        proxy_pass $upstream;
    }
}

server {
    server_name status.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://glances:61208;
        proxy_pass $target;
    }
}

server {
    server_name media.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://jellyfin:8096;
        proxy_pass $target;
    }
}

server {
    server_name bt.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://qbittorrent:8080;
        proxy_pass $target;
    }
}

server {
    server_name bte.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://qbittorrentee:8080;
        proxy_pass $target;
    }
}

server {
    server_name bitwarden.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://bitwarden:80;
        proxy_pass $target;
    }
}

server {
    server_name file.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://filebrowser:80;
        proxy_pass $target;
    }
}

server {
    server_name swap.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://filebrowser-swap:80;
        proxy_pass $target;
    }
}

server {
    server_name sub.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://qzyq-water-sub:8080;
        proxy_pass $target;
    }
}

server {
    server_name aria.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://aria-ng:6880;
        proxy_pass $target;
    }
    location /jsonrpc {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://aria:6800;
        proxy_pass $target;
    }
}

server {
    server_name frp.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://frps:7002;
        proxy_pass $target;
    }
}

server {
    server_name frpd.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://frps:7001;
        proxy_pass $target;
    }
}

server {
    server_name sync.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://sync:8384;
        proxy_pass $target;
    }
}

server {
    server_name webdav.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://webdav:80;
        proxy_pass $target;
    }
}

server {
    server_name clash.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        include /config/nginx/proxy.conf;
        include /config/nginx/authelia-location.conf;
        set $target http://clash:8080;
        proxy_pass $target;
    }
}

server {
    server_name rss.*;
    include /config/nginx/ssl.conf;
    include /config/nginx/authelia-server.conf;
    location / {
        gzip on;
        proxy_redirect off;
        proxy_set_header  Host                $http_host;
        proxy_set_header  X-Real-IP           $remote_addr;
        proxy_set_header  X-Forwarded-Ssl     on;
        proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header  X-Forwarded-Proto   $scheme;
        proxy_set_header  X-Frame-Options     SAMEORIGIN;
        client_max_body_size        100m;
        client_body_buffer_size     128k;
        proxy_buffer_size           4k;
        proxy_buffers               4 32k;
        proxy_busy_buffers_size     64k;
        proxy_temp_file_write_size  64k;

        include /config/nginx/authelia-location.conf;
        set $target http://rss:80;
        proxy_pass $target;
    }
}